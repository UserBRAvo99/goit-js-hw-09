{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAStC,OARgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,GACFI,EAAQT,EAAAY,OAAOC,QAAQ,aAAaV,QAAeC,SAErDM,EAAOV,EAAAY,OAAOE,QAAQ,YAAYX,QAAeC,QAAY,GAC5DA,EAAM,IAGRW,MAAKN,IACJT,EAAAY,OAAOC,QAAQ,eAAaV,QAAiBC,OAAW,IAEzDY,OAAMN,IACLV,EAAAY,OAAOE,QAAQ,cAAYX,QAAiBC,OAAW,G,EAhChD,CACXa,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAUC,IACnCA,EAAMC,iBACN,MACEC,UAAUnB,MAAEA,EAAKoB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEVC,QAAQC,IAAIxB,EAAMyB,MAAOL,EAAKK,MAAOJ,EAAOI,OAE5C,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtC5B,EAAc,UAAU4B,IAAK1B,EAAMyB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  console.log(delay.value, step.value, amount.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(`Promise${i}`, delay.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`Fulfilled ${position} in ${delay}ms!`));\n      }\n      reject(Notify.failure(`Rejected ${position} in ${delay}ms!`));\n    }, delay);\n  });\n  return promise\n    .then(resolve => {\n      Notify.success(`✅ Fulfilled ${position} in ${delay}ms!`);\n    })\n    .catch(reject => {\n      Notify.failure(`❌ Rejected ${position} in ${delay}ms!`);\n    });\n}\n// return promise\n//   .then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected ${position} in ${delay}ms`);\n//   });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","then","catch","form","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","console","log","value","i"],"version":3,"file":"03-promises.2eb7147a.js.map"}