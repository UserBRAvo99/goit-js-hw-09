{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQN,EAAUC,GAElBM,EAAOP,EAAUC,EAAM,GAExBA,EAAM,IAGRQ,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBd,EAAAe,OAAOC,QAAQ,eAAaH,QAAiBC,OAAW,IAEzDG,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,MAClBd,EAAAe,OAAOG,QAAQ,cAAYL,QAAiBC,OAAW,G,EAjChD,CACXK,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAUC,IACnCA,EAAMC,iBACN,MACEC,UAAUX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEVC,QAAQC,IAAIhB,EAAMiB,MAAOL,EAAKK,MAAOJ,EAAOI,OAE5C,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtC9B,EAAc,UAAU8B,IAAKlB,EAAMiB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  console.log(delay.value, step.value, amount.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(`Promise${i}`, delay.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, delay);\n      } else {\n        reject(position, delay);\n      }\n    }, delay);\n  });\n  return promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled ${position} in ${delay}ms!`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected ${position} in ${delay}ms!`);\n    });\n}\n// return promise\n//   .then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected ${position} in ${delay}ms`);\n//   });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","position","delay","Notify","success","catch","failure","form","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","console","log","value","i"],"version":3,"file":"03-promises.da9c8b41.js.map"}